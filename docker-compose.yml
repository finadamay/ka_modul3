version: '3.8'

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: laravel_app
    restart: unless-stopped
    volumes:
      - .:/var/www
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: webtubes_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE: webtubes
      MYSQL_USER: root
      MYSQL_PASSWORD:
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel
    ports:
      - "3306:3306"

  webserver:
    image: nginx:alpine
    container_name: laravel_web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel

networks:
  laravel:

volumes:
  dbdata:


# services:
#   app:

#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: toko_buku_online
#     container_name: toko_online
#     restart: unless-stopped
#     working_dir: /var/www
#     volumes:
#       - .:/var/www
#       - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
#     networks:
#       - laravel
#     depends_on:
#       - db

#   webserver:
#     image: nginx:alpine
#     container_name: nginx
#     restart: unless-stopped
#     ports:
#       - "8000:80"
#     volumes:
#       - .:/var/www
#       - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#       - app
#     networks:
#       - laravel

#   db:
#     image: mysql:8.0
#     container_name: toko_buku_online_db
#     restart: unless-stopped
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: toko_online
#       MYSQL_USER: laravel
#       MYSQL_PASSWORD: password
#     volumes:
#       - mysql_data:/var/lib/mysql
#       - ./toko_online.sql:/docker-entrypoint-initdb.d/toko_online.sql
#     ports:
#       - "3306:3306"
#     networks:
#       - laravel


# networks:
#   laravel:

# volumes:
#   mysql_data:
